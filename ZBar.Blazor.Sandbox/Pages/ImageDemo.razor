@page "/image"

<PageTitle>ZBarImage</PageTitle>
<div class="page">
    <ZBarImage @ref="Image"
        AutoScan="@AutoScan"
        ScanFor="@ScanFor"
        MinimumValueLength="@MinValueLength"
        MaximumValueLength="@MaxValueLength"
        HonorCheckDigit="@HonorCheckDigit"
        IncludeCheckDigit="@IncludeCheckDigit"
        EnableFullCharacterSet="@EnableFullCharacterSet"
        ImageViewType="@ImageView"
        Verbose="@Verbose"
        OnImageLoadSuccess="ImageLoadSuccess"
        OnImageLoadFailure="ImageLoadFailure"
        OnBarcodesFound="OnBarcodesFound"
        OnBarcodesNotFound="OnBarcodesNotFound"
        SourceType="@SourceType"
        Src="@ImageSrc"/>
    <div class="tools">
        <div class="section">
            <label class="form-check-label description" style="padding-top: 4px;">Image Source:</label>
            <div class="radioSelection" style="padding-top: 4px;">
                <div>
                    <input class="form-check-input" type="radio" name="sourceType" id="SourceFile" checked="@(SourceType == ImageSourceType.Stream)" @onchange="@(() => SourceType = ImageSourceType.Stream)" />
                    <label class="form-check-label" for="SourceFile">File</label>
                </div>
                <div>
                    <input class="form-check-input" type="radio" name="sourceType" id="SourceUrl" checked="@(SourceType == ImageSourceType.Url)" @onchange="@(() => SourceType = ImageSourceType.Url)" />
                    <label class="form-check-label" for="SourceUrl">URL</label>
                </div>
            </div>
        </div>
        <div class="section">
            @if (SourceType == ImageSourceType.Stream)
            {
                <InputFile OnChange="LoadImage" />
                @if (ImageLoadFailed)
                {
                    <div class="errorText">The provided file could not be interpreted as image data.</div>
                }
            } else if (SourceType == ImageSourceType.Url)
            {
                <div class="urlSection">
                    <input class="imageUrl" type="text" @bind-Value="ImageSrc" @bind-Value:event="onchange" />
                    <div class="subnote">Note: CORS policy may prevent loading image data from other domains.</div>
                    <div class="subnote">Test images for <a href="img/upca.png" target="_blank">UPC-A</a> and <a href="img/isbn13.png" target="_blank">ISBN-13</a> are hosted here.</div>
                </div>
                @if (ImageLoadFailed)
                {
                    <div class="errorText">The provided URL could not be used to load image data.</div>
                }
            }
        </div>
        <div class="section">
            <label class="form-check-label description" style="padding-top: 4px;">Scan For:</label>
            <span style="padding-top: 4px;">@GetScanForDisplay()</span>
            <button class="btn btn-secondary btn-sm" style="margin-left: 8px;" @onclick="OpenAdvancedConfig">Advanced Configuration</button>
        </div>
        <div class="section">
            <label class="form-check-label description" style="padding-top: 4px;">Auto Scan:</label>
            <div class="radioSelection" style="padding-top: 4px;">
                <div>
                    <input class="form-check-input" type="radio" name="autoScan" id="AutoScanOn" checked="@AutoScan" @onchange="@(() => AutoScan = true)" />
                    <label class="form-check-label" for="AutoScanOn">On</label>
                </div>
                <div>
                    <input class="form-check-input" type="radio" name="autoScan" id="AutoScanOff" checked="@(!AutoScan)" @onchange="@(() => AutoScan = false)" />
                    <label class="form-check-label" for="AutoScanOff">Off</label>
                </div>
            </div>
            <button class="btn btn-secondary btn-sm" style="margin-left: 10px;" disabled="@(!ScanEnabled)" @onclick="Scan">Scan Now</button>
        </div>
        <div class="section">
            <label class="form-check-label description">Verbose:</label>
            <div class="radioSelection">
                <div>
                    <input class="form-check-input" type="radio" name="verbose" id="VerboseOn" checked="@Verbose" @onchange="@(() => Verbose = true)">
                    <label class="form-check-label" for="VerboseOn">On</label>
                </div>
                <div>
                    <input class="form-check-input" type="radio" name="verbose" id="VerboseOff" checked="@(!Verbose)" @onchange="@(() => Verbose = false)">
                    <label class="form-check-label" for="VerboseOff">Off</label>
                </div>
            </div>
        </div>
        <div class="section">
            <label class="form-check-label description">Image View Type:</label>
            <div class="radioSelection">
                <div>
                    <input class="form-check-input" type="radio" name="imageViewType" id="ImageViewTypeImageFeed" checked="@(ImageView == ImageViewType.ImageFeed)" @onchange="@(() => ImageView = ImageViewType.ImageFeed)">
                    <label class="form-check-label" for="ImageViewTypeImageFeed">Image Feed</label>
                </div>
                <div>
                    <input class="form-check-input" type="radio" name="imageViewType" id="ImageViewTypeNone" checked="@(ImageView == ImageViewType.None)" @onchange="@(() => ImageView = ImageViewType.None)">
                    <label class="form-check-label" for="ImageViewTypeNone">None</label>
                </div>
            </div>
        </div>
        <div class="section foundBarcodes">
            <h5>Found Barcodes</h5>
            <div class="barcodes">
                @if (FoundBarcodes != null)
                {
                    foreach (var barcode in FoundBarcodes)
                    {
                        <div class="barcode">
                            <div class="type">@barcode.Type</div>
                            <div class="value">@barcode.Value</div>
                        </div>
                    }
                }
                else
                {
                    <div class="none">None Found</div>
                }
            </div>
        </div>
    </div>
</div>